name: package beta

# 非master分支提交代码时，构建最新测试包
on:
  push:
    branches:
      - '*'
      - '!master'
  # 添加手动触发选项
  workflow_dispatch:
    inputs:
      branch:
        description: '选择要构建的分支'
        required: false
        default: 'develop'
        type: choice
        options:
          - develop
          - focus
          - master
      build_note:
        description: '构建说明（可选）'
        required: false
        default: '手动触发的测试包构建'

jobs:
  package:
    name: Generate Beta APK
    runs-on: ubuntu-latest
    steps:
      # 1.拉取代码
      - name: checkout source code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.branch || github.ref }}

      # 2.配置JDK
      - name: set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: adopt

      # 3.获取签名密钥
      - name: setup keystore
        run: |
          echo "${{ secrets.KEYSTORE_FILE }}" | base64 --decode > gradle/assemble/dandanplay.jks

      # 4.配置构建类型
      - name: setup build type
        run: echo "BUILD_TYPE=beta" >> $GITHUB_ENV

      # 新增：替换 DevelopConfigTable.kt 中的占位符
      - name: replace placeholders in DevelopConfigTable.kt
        run: |
          APP_ID=${{ secrets.DANDANPLAY_APP_ID }}
          APP_SECRET=${{ secrets.DANDANPLAY_APP_SECRET }}
          BUGLY_ID=${{ secrets.BUGLY_ID }}
          sed -i "s/{{APP_ID}}/$APP_ID/g" common_component/src/main/java/com/xyoye/common_component/config/DevelopConfigTable.kt
          sed -i "s/{{APP_SECRET}}/$APP_SECRET/g" common_component/src/main/java/com/xyoye/common_component/config/DevelopConfigTable.kt
          sed -i "s/{{BUGLY_ID}}/$BUGLY_ID/g" common_component/src/main/java/com/xyoye/common_component/config/DevelopConfigTable.kt

      # 5.构建安装包
      - name: assemble apk
        env:
          KEYSTORE_PASS: ${{ secrets.KEYSTORE_PASS }}
          ALIAS_NAME: ${{ secrets.ALIAS_NAME }}
          ALIAS_PASS: ${{ secrets.ALIAS_PASS }}
        run: chmod +x gradlew && ./gradlew clean assemble${{ env.BUILD_TYPE }} --stacktrace

      # 6.配置构建版本
      - name: setup build version
        run: |
          apk_version=`egrep -o "[0-9].[0-9].[0-9]" buildSrc/src/main/java/Versions.kt`
          short_sha=`echo ${{ github.sha }} | cut -c1-7`
          echo "BUILD_VERSION=$apk_version" >> $GITHUB_ENV
          echo "SHORT_SHA=$short_sha" >> $GITHUB_ENV

      # 7.移动文件到根目录
      - name: move file
        run: |
          abis=(arm64-v8a armeabi-v7a universal)
          for abi in ${abis[@]}
          do
            file_name="dandanplay_v${{ env.BUILD_VERSION }}_${abi}-${{ env.BUILD_TYPE }}.apk"
            mv app/build/outputs/apk/${{ env.BUILD_TYPE }}/${file_name} $file_name
          done

      # 8.删除相同版本的旧beta包和tag
      - name: delete old beta releases and tags
        run: |
          # 安装jq工具
          sudo apt-get update && sudo apt-get install -y jq
          
          # 获取相同版本号的旧beta发布和tag（排除即将创建的新发布）
          curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/releases" > releases.json
          
          # 提取旧发布的ID和tag名称
          old_releases=$(jq -r '.[] | select(.tag_name | startswith("dandanplay-v${{ env.BUILD_VERSION }}-beta")) | "\(.id) \(.tag_name)"' releases.json | head -n -1)
          
          # 删除旧发布和对应的tag（保留最新的一个）
          echo "$old_releases" | while read -r release_id tag_name; do
            if [ ! -z "$release_id" ] && [ ! -z "$tag_name" ]; then
              echo "删除旧beta发布: $release_id"
              curl -X DELETE -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                "https://api.github.com/repos/${{ github.repository }}/releases/$release_id"
              
              echo "删除旧beta标签: $tag_name"
              curl -X DELETE -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                "https://api.github.com/repos/${{ github.repository }}/git/refs/tags/$tag_name"
            fi
          done

      # 9.创建Release
      - name: generate release
        id: generate_release
        uses: softprops/action-gh-release@v1
        with:
          name: 弹弹play概念版 v${{ env.BUILD_VERSION }} Beta (${{ env.SHORT_SHA }})
          tag_name: dandanplay-v${{ env.BUILD_VERSION }}-beta-${{ github.run_number }}-${{ env.SHORT_SHA }}
          body: |
            🚀 **测试版本构建**

            **构建分支**: ${{ github.event.inputs.branch || github.ref_name }}
            **构建说明**: ${{ github.event.inputs.build_note || '最新测试包，非master分支代码构建' }}
            **构建时间**: ${{ github.run_id }}
            **触发方式**: ${{ github.event_name == 'workflow_dispatch' && '手动触发' || '自动触发' }}
            **提交SHA**: ${{ env.SHORT_SHA }}

            > 这是一个预发布版本，仅用于测试目的
          prerelease: true
          files: |
            dandanplay_v${{ env.BUILD_VERSION }}_arm64-v8a-${{ env.BUILD_TYPE }}.apk
            dandanplay_v${{ env.BUILD_VERSION }}_armeabi-v7a-${{ env.BUILD_TYPE }}.apk
            dandanplay_v${{ env.BUILD_VERSION }}_universal-${{ env.BUILD_TYPE }}.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
